Name = "Botan"
Version = "1.0.0"
Public = "Module.cpp"
IncludePaths = [
	"../../build/include/"
]
Defines = [
	"_DISABLE_EXTENDED_ALIGNED_STORAGE",
]
Source = [
	"asn1/alg_id.cpp",
	"asn1/asn1_attribute.cpp",
	"asn1/asn1_obj.cpp",
	"asn1/asn1_oid.cpp",
	"asn1/asn1_print.cpp",
	"asn1/asn1_str.cpp",
	"asn1/asn1_time.cpp",
	"asn1/ber_dec.cpp",
	"asn1/der_enc.cpp",
	"asn1/oid_maps.cpp",
	"asn1/oids.cpp",
	"base/buf_comp.cpp",
	"base/scan_name.cpp",
	"base/sym_algo.cpp",
	"base/symkey.cpp",
	"block/aes/aes.cpp",
	"block/aes/aes_ni/aes_ni.cpp",
	"block/aes/aes_vperm/aes_vperm.cpp",
	"block/aria/aria.cpp",
	"block/block_cipher.cpp",
	"block/blowfish/blowfish.cpp",
	"block/camellia/camellia.cpp",
	"block/cascade/cascade.cpp",
	"block/cast128/cast128.cpp",
	"block/cast256/cast256.cpp",
	"block/des/des.cpp",
	"block/des/des_tab.cpp",
	"block/des/desx.cpp",
	"block/gost_28147/gost_28147.cpp",
	"block/idea/idea.cpp",
	"block/idea/idea_sse2/idea_sse2.cpp",
	"block/kasumi/kasumi.cpp",
	"block/lion/lion.cpp",
	"block/misty1/misty1.cpp",
	"block/noekeon/noekeon.cpp",
	"block/noekeon/noekeon_simd/noekeon_simd.cpp",
	"block/seed/seed.cpp",
	"block/serpent/serpent.cpp",
	"block/serpent/serpent_simd/serpent_simd.cpp",
	"block/shacal2/shacal2.cpp",
	"block/shacal2/shacal2_avx2/shacal2_avx2.cpp",
	"block/shacal2/shacal2_simd/shacal2_simd.cpp",
	"block/shacal2/shacal2_x86/shacal2_x86.cpp",
	"block/sm4/sm4.cpp",
	"block/threefish_512/threefish_512.cpp",
	"block/threefish_512/threefish_512_avx2/threefish_512_avx2.cpp",
	"block/twofish/twofish.cpp",
	"block/twofish/twofish_tab.cpp",
	"block/xtea/xtea.cpp",
	"codec/base32/base32.cpp",
	"codec/base58/base58.cpp",
	"codec/base64/base64.cpp",
	"codec/hex/hex.cpp",
	"compat/sodium/sodium_25519.cpp",
	"compat/sodium/sodium_aead.cpp",
	"compat/sodium/sodium_auth.cpp",
	"compat/sodium/sodium_box.cpp",
	"compat/sodium/sodium_chacha.cpp",
	"compat/sodium/sodium_salsa.cpp",
	"compat/sodium/sodium_secretbox.cpp",
	"compat/sodium/sodium_utils.cpp",
	"entropy/entropy_srcs.cpp",
	"entropy/rdrand/rdrand.cpp",
	"entropy/rdseed/rdseed.cpp",
	"entropy/win32_stats/es_win32.cpp",
	# "ffi/ffi.cpp",
	# "ffi/ffi_block.cpp",
	# "ffi/ffi_cert.cpp",
	# "ffi/ffi_cipher.cpp",
	# "ffi/ffi_fpe.cpp",
	# "ffi/ffi_hash.cpp",
	# "ffi/ffi_hotp.cpp",
	# "ffi/ffi_kdf.cpp",
	# "ffi/ffi_keywrap.cpp",
	# "ffi/ffi_mac.cpp",
	# "ffi/ffi_mp.cpp",
	# "ffi/ffi_pk_op.cpp",
	# "ffi/ffi_pkey.cpp",
	# "ffi/ffi_pkey_algs.cpp",
	# "ffi/ffi_rng.cpp",
	# "ffi/ffi_totp.cpp",
	# "filters/algo_filt.cpp",
	# "filters/b64_filt.cpp",
	# "filters/basefilt.cpp",
	# "filters/buf_filt.cpp",
	# "filters/cipher_filter.cpp",
	# "filters/comp_filter.cpp",
	# "filters/data_snk.cpp",
	# "filters/filter.cpp",
	# "filters/hex_filt.cpp",
	# "filters/out_buf.cpp",
	# "filters/pipe.cpp",
	# "filters/pipe_io.cpp",
	# "filters/pipe_rw.cpp",
	# "filters/secqueue.cpp",
	# "filters/threaded_fork.cpp",
	"hash/blake2/blake2b.cpp",
	"hash/checksum/adler32/adler32.cpp",
	"hash/checksum/crc24/crc24.cpp",
	"hash/checksum/crc32/crc32.cpp",
	"hash/comb4p/comb4p.cpp",
	"hash/gost_3411/gost_3411.cpp",
	"hash/hash.cpp",
	"hash/keccak/keccak.cpp",
	"hash/md4/md4.cpp",
	"hash/md5/md5.cpp",
	"hash/mdx_hash/mdx_hash.cpp",
	"hash/par_hash/par_hash.cpp",
	"hash/rmd160/rmd160.cpp",
	"hash/sha1/sha160.cpp",
	"hash/sha1/sha1_sse2/sha1_sse2.cpp",
	"hash/sha1/sha1_x86/sha1_x86.cpp",
	"hash/sha2_32/sha2_32.cpp",
	"hash/sha2_32/sha2_32_x86/sha2_32_x86.cpp",
	"hash/sha2_64/sha2_64.cpp",
	"hash/sha3/sha3.cpp",
	"hash/shake/shake.cpp",
	"hash/skein/skein_512.cpp",
	"hash/sm3/sm3.cpp",
	"hash/streebog/streebog.cpp",
	"hash/streebog/streebog_precalc.cpp",
	"hash/tiger/tig_tab.cpp",
	"hash/tiger/tiger.cpp",
	"hash/whirlpool/whirlpool.cpp",
	"hash/whirlpool/whrl_tab.cpp",
	"kdf/hkdf/hkdf.cpp",
	"kdf/kdf.cpp",
	"kdf/kdf1/kdf1.cpp",
	"kdf/kdf1_iso18033/kdf1_iso18033.cpp",
	"kdf/kdf2/kdf2.cpp",
	"kdf/prf_tls/prf_tls.cpp",
	"kdf/prf_x942/prf_x942.cpp",
	"kdf/sp800_108/sp800_108.cpp",
	"kdf/sp800_56a/sp800_56a.cpp",
	"kdf/sp800_56c/sp800_56c.cpp",
	"mac/cbc_mac/cbc_mac.cpp",
	"mac/cmac/cmac.cpp",
	"mac/gmac/gmac.cpp",
	"mac/hmac/hmac.cpp",
	"mac/mac.cpp",
	"mac/poly1305/poly1305.cpp",
	"mac/siphash/siphash.cpp",
	"mac/x919_mac/x919_mac.cpp",
	"math/bigint/big_code.cpp",
	"math/bigint/big_io.cpp",
	"math/bigint/big_ops2.cpp",
	"math/bigint/big_ops3.cpp",
	"math/bigint/big_rand.cpp",
	"math/bigint/bigint.cpp",
	"math/bigint/divide.cpp",
	"math/mp/mp_comba.cpp",
	"math/mp/mp_karat.cpp",
	"math/mp/mp_monty.cpp",
	"math/mp/mp_monty_n.cpp",
	"math/numbertheory/dsa_gen.cpp",
	"math/numbertheory/jacobi.cpp",
	"math/numbertheory/make_prm.cpp",
	"math/numbertheory/mod_inv.cpp",
	"math/numbertheory/monty.cpp",
	"math/numbertheory/monty_exp.cpp",
	"math/numbertheory/mp_numth.cpp",
	"math/numbertheory/nistp_redc.cpp",
	"math/numbertheory/numthry.cpp",
	"math/numbertheory/pow_mod.cpp",
	"math/numbertheory/primality.cpp",
	"math/numbertheory/primes.cpp",
	"math/numbertheory/reducer.cpp",
	"math/numbertheory/ressol.cpp",
	# "misc/aont/package.cpp",
	# "misc/cryptobox/cryptobox.cpp",
	# "misc/fpe_fe1/fpe_fe1.cpp",
	# "misc/hotp/hotp.cpp",
	# "misc/hotp/totp.cpp",
	# "misc/nist_keywrap/nist_keywrap.cpp",
	# "misc/rfc3394/rfc3394.cpp",
	# "misc/roughtime/roughtime.cpp",
	# "misc/srp6/srp6.cpp",
	# "misc/tss/tss.cpp",
	# "modes/aead/aead.cpp",
	# "modes/aead/ccm/ccm.cpp",
	# "modes/aead/chacha20poly1305/chacha20poly1305.cpp",
	# "modes/aead/eax/eax.cpp",
	# "modes/aead/gcm/clmul_ssse3/clmul_ssse3.cpp",
	# "modes/aead/gcm/gcm.cpp",
	# "modes/aead/gcm/ghash.cpp",
	# "modes/aead/ocb/ocb.cpp",
	# "modes/aead/siv/siv.cpp",
	# "modes/cbc/cbc.cpp",
	# "modes/cfb/cfb.cpp",
	# "modes/cipher_mode.cpp",
	# "modes/mode_pad/mode_pad.cpp",
	# "modes/xts/xts.cpp",
	# "passhash/bcrypt/bcrypt.cpp",
	# "passhash/passhash9/passhash9.cpp",
	# "pbkdf/argon2/argon2.cpp",
	# "pbkdf/argon2/argon2fmt.cpp",
	# "pbkdf/argon2/argon2pwhash.cpp",
	# "pbkdf/bcrypt_pbkdf/bcrypt_pbkdf.cpp",
	# "pbkdf/pbkdf.cpp",
	# "pbkdf/pbkdf1/pbkdf1.cpp",
	# "pbkdf/pbkdf2/pbkdf2.cpp",
	# "pbkdf/pgp_s2k/pgp_s2k.cpp",
	# "pbkdf/pwdhash.cpp",
	# "pbkdf/scrypt/scrypt.cpp",
	# "pk_pad/eme.cpp",
	# "pk_pad/eme_oaep/oaep.cpp",
	# "pk_pad/eme_pkcs1/eme_pkcs.cpp",
	# "pk_pad/eme_raw/eme_raw.cpp",
	# "pk_pad/emsa.cpp",
	# "pk_pad/emsa1/emsa1.cpp",
	# "pk_pad/emsa_pkcs1/emsa_pkcs1.cpp",
	# "pk_pad/emsa_pssr/pssr.cpp",
	# "pk_pad/emsa_raw/emsa_raw.cpp",
	# "pk_pad/emsa_x931/emsa_x931.cpp",
	# "pk_pad/hash_id/hash_id.cpp",
	# "pk_pad/iso9796/iso9796.cpp",
	# "pk_pad/mgf1/mgf1.cpp",
	# "pk_pad/padding.cpp",
	# "prov/pkcs11/p11.cpp",
	# "prov/pkcs11/p11_ecc_key.cpp",
	# "prov/pkcs11/p11_ecdh.cpp",
	# "prov/pkcs11/p11_ecdsa.cpp",
	# "prov/pkcs11/p11_mechanism.cpp",
	# "prov/pkcs11/p11_module.cpp",
	# "prov/pkcs11/p11_object.cpp",
	# "prov/pkcs11/p11_randomgenerator.cpp",
	# "prov/pkcs11/p11_rsa.cpp",
	# "prov/pkcs11/p11_session.cpp",
	# "prov/pkcs11/p11_slot.cpp",
	# "prov/pkcs11/p11_x509.cpp",
	# "psk_db/psk_db.cpp",
	# "psk_db/psk_db_sql.cpp",
	# "pubkey/blinding.cpp",
	# "pubkey/cecpq1/cecpq1.cpp",
	# "pubkey/curve25519/curve25519.cpp",
	# "pubkey/curve25519/donna.cpp",
	# "pubkey/dh/dh.cpp",
	# "pubkey/dl_algo/dl_algo.cpp",
	# "pubkey/dl_group/dl_group.cpp",
	# "pubkey/dl_group/dl_named.cpp",
	# "pubkey/dlies/dlies.cpp",
	# "pubkey/dsa/dsa.cpp",
	# "pubkey/ec_group/curve_gfp.cpp",
	# "pubkey/ec_group/ec_group.cpp",
	# "pubkey/ec_group/ec_named.cpp",
	# "pubkey/ec_group/point_gfp.cpp",
	# "pubkey/ec_group/point_mul.cpp",
	# "pubkey/ecc_key/ecc_key.cpp",
	# "pubkey/ecdh/ecdh.cpp",
	# "pubkey/ecdsa/ecdsa.cpp",
	# "pubkey/ecgdsa/ecgdsa.cpp",
	# "pubkey/ecies/ecies.cpp",
	# "pubkey/eckcdsa/eckcdsa.cpp",
	# "pubkey/ed25519/ed25519.cpp",
	# "pubkey/ed25519/ed25519_fe.cpp",
	# "pubkey/ed25519/ed25519_key.cpp",
	# "pubkey/ed25519/ge.cpp",
	# "pubkey/ed25519/sc_muladd.cpp",
	# "pubkey/ed25519/sc_reduce.cpp",
	# "pubkey/elgamal/elgamal.cpp",
	# "pubkey/gost_3410/gost_3410.cpp",
	# "pubkey/keypair/keypair.cpp",
	# "pubkey/mce/code_based_key_gen.cpp",
	# "pubkey/mce/gf2m_rootfind_dcmp.cpp",
	# "pubkey/mce/gf2m_small_m.cpp",
	# "pubkey/mce/goppa_code.cpp",
	# "pubkey/mce/mce_workfactor.cpp",
	# "pubkey/mce/mceliece.cpp",
	# "pubkey/mce/mceliece_key.cpp",
	# "pubkey/mce/polyn_gf2m.cpp",
	# "pubkey/mceies/mceies.cpp",
	# "pubkey/newhope/newhope.cpp",
	# "pubkey/pbes2/pbes2.cpp",
	# "pubkey/pem/pem.cpp",
	# "pubkey/pk_algs.cpp",
	# "pubkey/pk_keys.cpp",
	# "pubkey/pk_ops.cpp",
	# "pubkey/pkcs8.cpp",
	# "pubkey/pubkey.cpp",
	# "pubkey/rfc6979/rfc6979.cpp",
	# "pubkey/rsa/rsa.cpp",
	# "pubkey/sm2/sm2.cpp",
	# "pubkey/sm2/sm2_enc.cpp",
	# "pubkey/workfactor.cpp",
	# "pubkey/x509_key.cpp",
	# "pubkey/xmss/xmss_common_ops.cpp",
	# "pubkey/xmss/xmss_hash.cpp",
	# "pubkey/xmss/xmss_index_registry.cpp",
	# "pubkey/xmss/xmss_parameters.cpp",
	# "pubkey/xmss/xmss_privatekey.cpp",
	# "pubkey/xmss/xmss_publickey.cpp",
	# "pubkey/xmss/xmss_signature.cpp",
	# "pubkey/xmss/xmss_signature_operation.cpp",
	# "pubkey/xmss/xmss_verification_operation.cpp",
	# "pubkey/xmss/xmss_wots_parameters.cpp",
	# "pubkey/xmss/xmss_wots_privatekey.cpp",
	# "pubkey/xmss/xmss_wots_publickey.cpp",
	# "rng/auto_rng/auto_rng.cpp",
	# "rng/chacha_rng/chacha_rng.cpp",
	# "rng/hmac_drbg/hmac_drbg.cpp",
	# "rng/rdrand_rng/rdrand_rng.cpp",
	# "rng/rng.cpp",
	# "rng/stateful_rng/stateful_rng.cpp",
	# "rng/system_rng/system_rng.cpp",
	# "stream/chacha/chacha.cpp",
	# "stream/chacha/chacha_avx2/chacha_avx2.cpp",
	# "stream/chacha/chacha_simd32/chacha_simd32.cpp",
	# "stream/ctr/ctr.cpp",
	# "stream/ofb/ofb.cpp",
	# "stream/rc4/rc4.cpp",
	# "stream/salsa20/salsa20.cpp",
	# "stream/shake_cipher/shake_cipher.cpp",
	# "stream/stream_cipher.cpp",
	# "tls/credentials_manager.cpp",
	# "tls/msg_cert_req.cpp",
	# "tls/msg_cert_status.cpp",
	# "tls/msg_cert_verify.cpp",
	# "tls/msg_certificate.cpp",
	# "tls/msg_client_hello.cpp",
	# "tls/msg_client_kex.cpp",
	# "tls/msg_finished.cpp",
	# "tls/msg_hello_verify.cpp",
	# "tls/msg_server_hello.cpp",
	# "tls/msg_server_kex.cpp",
	# "tls/msg_session_ticket.cpp",
	# "tls/sessions_sql/tls_session_manager_sql.cpp",
	# "tls/tls_alert.cpp",
	# "tls/tls_algos.cpp",
	# "tls/tls_blocking.cpp",
	# "tls/tls_callbacks.cpp",
	# "tls/tls_cbc/tls_cbc.cpp",
	# "tls/tls_channel.cpp",
	# "tls/tls_ciphersuite.cpp",
	# "tls/tls_client.cpp",
	# "tls/tls_extensions.cpp",
	# "tls/tls_handshake_hash.cpp",
	# "tls/tls_handshake_io.cpp",
	# "tls/tls_handshake_state.cpp",
	# "tls/tls_policy.cpp",
	# "tls/tls_record.cpp",
	# "tls/tls_server.cpp",
	# "tls/tls_session.cpp",
	# "tls/tls_session_key.cpp",
	# "tls/tls_session_manager_memory.cpp",
	# "tls/tls_suite_info.cpp",
	# "tls/tls_text_policy.cpp",
	# "tls/tls_version.cpp",
	# "utils/assert.cpp",
	# "utils/calendar.cpp",
	# "utils/charset.cpp",
	# "utils/cpuid/cpuid.cpp",
	# "utils/cpuid/cpuid_arm.cpp",
	# "utils/cpuid/cpuid_ppc.cpp",
	# "utils/cpuid/cpuid_x86.cpp",
	# "utils/ct_utils.cpp",
	# "utils/data_src.cpp",
	# "utils/dyn_load/dyn_load.cpp",
	# "utils/exceptn.cpp",
	# "utils/filesystem.cpp",
	# "utils/http_util/http_util.cpp",
	# "utils/locking_allocator/locking_allocator.cpp",
	# "utils/mem_ops.cpp",
	# "utils/mem_pool/mem_pool.cpp",
	# "utils/os_utils.cpp",
	# "utils/parsing.cpp",
	# "utils/poly_dbl/poly_dbl.cpp",
	# "utils/read_cfg.cpp",
	# "utils/read_kv.cpp",
	# "utils/socket/socket.cpp",
	# "utils/socket/socket_udp.cpp",
	# "utils/socket/uri.cpp",
	# "utils/thread_utils/barrier.cpp",
	# "utils/thread_utils/rwlock.cpp",
	# "utils/thread_utils/semaphore.cpp",
	# "utils/thread_utils/thread_pool.cpp",
	# "utils/timer.cpp",
	# "utils/uuid/uuid.cpp",
	# "utils/version.cpp",
	# "x509/asn1_alt_name.cpp",
	# "x509/cert_status.cpp",
	# "x509/certstor.cpp",
	# "x509/certstor_flatfile/certstor_flatfile.cpp",
	# "x509/certstor_sql/certstor_sql.cpp",
	# "x509/certstor_system/certstor_system.cpp",
	# "x509/certstor_system_windows/certstor_windows.cpp",
	# "x509/crl_ent.cpp",
	# "x509/datastor.cpp",
	# "x509/key_constraint.cpp",
	# "x509/name_constraint.cpp",
	# "x509/ocsp.cpp",
	# "x509/ocsp_types.cpp",
	# "x509/pkcs10.cpp",
	# "x509/x509_ca.cpp",
	# "x509/x509_crl.cpp",
	# "x509/x509_dn.cpp",
	# "x509/x509_dn_ub.cpp",
	# "x509/x509_ext.cpp",
	# "x509/x509_obj.cpp",
	# "x509/x509cert.cpp",
	# "x509/x509opt.cpp",
	# "x509/x509path.cpp",
	# "x509/x509self.cpp",
]
